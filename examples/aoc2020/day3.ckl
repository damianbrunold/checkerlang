# https://adventofcode.com/2020/day/3

require IO import [read_file];
require List import [map_list, prod];

def data = read_file("day3-input.txt") !> trim() !> lines();
#def data = read_file("day3-sample.txt") !> trim() !> lines();

def class Grid do 
    def _init_(self, lines) do
        self->data = lines !> map_list(fn(line) line !> split(""));
        self->width = self->data[0] !> length();
        self->height = self->data !> length();
        self->x = 0;
        self->y = 0;
    end;

    def get(self, x, y) self->data[y][x];
    def pos(self) [self->x, self->y];
    def current_val(self) self->get(self->x, self->y);
    
    def move(self, dx, dy) do
        self->x = (self->x + dx) % self->width;
        self->y += dy;
    end;
end;

def process(data, dx, dy) do
    def grid = new(Grid, data);
    def trees = 0;
    grid->move(dx, dy);
    while grid->y < grid->height do
        if grid->current_val() == '#' then trees += 1;
        grid->move(dx, dy);
    end;
    return trees;
end;

process(data, 3, 1) !> println();

def slopes = [[1, 1], [3, 1], [5, 1], [7, 1], [1, 2]];

def process_slope(slope) do
    process(data, slope[0], slope[1]);
end;

slopes !> map_list(process_slope) !> prod() !> println();
